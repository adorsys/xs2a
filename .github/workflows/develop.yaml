name: Develop CI

on:
  push:
    branches:
      - develop

env:
  SONAR_PRJ_KEY: adorsys_xs2a
  SONAR_ORG: adorsys
  SONAR_HOST: https://sonarcloud.io
  GPG_EXECUTABLE: ${{ secrets.GPG_EXECUTABLE }}
  GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}

jobs:
  build_and_test:
    name: Build and test XS2A (openjdk 1.11)
    runs-on: ubuntu-latest
    steps:
      - name: Clone XS2A develop repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build XS2A
        run: mvn -ntp -DskipTests -DskipITs -Dmaven.javadoc.skip=true clean install

      - name: Check pmd
        run: mvn -ntp pmd:check

      - name: Generate javadocs
        run: mvn -ntp javadoc:javadoc

      - name: Run UI tests
        run: mvn -ntp -DskipITs --fail-at-end clean install

      - name: Run IT tests
        run: mvn -ntp failsafe:integration-test failsafe:verify

  sonar:
    name: Publish code coverage to Sonar Cloud
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Clone XS2A develop repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Publish to sonarcloud
        run: >
          mvn
          -ntp
          clean
          org.jacoco:jacoco-maven-plugin:prepare-agent
          install
          sonar:sonar
          -Pcoverage
          -Dsonar.host.url=${{ env.SONAR_HOST }}
          -Dsonar.projectKey=${{ env.SONAR_PRJ_KEY }}
          -Dsonar.organization=${{ env.SONAR_ORG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deployMavenCentral:
    name: Publish XS2A artifacts to Maven Central
    needs: [build_and_test, sonar]
    runs-on: ubuntu-latest
    steps:
      - name: Clone ledgers develop repository
        uses: actions/checkout@v2

      - name: Set up JDK 11 for x64
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          architecture: x64

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Publish to Maven Central
        run: |
          gpg --version
          export GPG_TTY="$( tty )" #need to run to sign artifacts with maven
          echo ${{ secrets.GPG_SECRET_KEY }} | base64 --decode | gpg --import --batch
          echo ${{ secrets.GPG_OWNERTRUST }} | base64 --decode | gpg --batch --import-ownertrust
          mvn -ntp --settings scripts/mvn-release-settings.xml -Prelease -DskipTests -U deploy

  deployGithubPages:
    name: create github pages
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - name: Clone XS2A develop repository
        uses: actions/checkout@v2

      - name: install Make plantuml asciidoctor
        run: sudo apt-get update && sudo apt-get install make plantuml rsync tree -y

      - name: prepare pages and diagramms
        run: |
            mkdir -p pages/html/doc
            rsync -armR --include="*/" --include="*."{adoc,puml,png} --exclude="*" doc/ pages

      - name: plantuml
        uses: Timmy/plantuml-action@v1
        with:
           args: '**/*.puml -DPLANTUML_LIMIT_SIZE=8192'

      - name:  Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Install AsciiDoctor
        uses: reitzig/actions-asciidoctor@v2.0.0

      - name: Convert adoc to html
        run: cd pages && asciidoctor --failure-level WARN -R doc -D html '**/*.adoc'

      - name: Rsync diagrams and pictures
        run: cd  pages/doc && rsync -amvR --include="*/" --include="*.png" --exclude="*" . ../html

      - name: check pages html tree
        run: cd pages && rm -rf doc && tree html

      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pages/html
