/**
 * XS2A REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * Contact: fpo@adorsys.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Amount } from './amount';
import { AuthenticationObject } from './authenticationObject';
import { Links } from './links';


/**
 * Response Body generated by the Payment Service
 */
export interface PaymentInitialisationResponse {
    /**
     * Links: a list of hyperlinks to be recognised by the TPP.
     */
    links?: Links;
    /**
     * Resource identification of the generated payment initiation resource.
     */
    paymentId: string;
    /**
     * Text to be displayed to the PSU
     */
    psuMessage?: string;
    /**
     * This data element might be contained, if SCA is required and if the PSU has a choice between different authentication methods
     */
    scaMethods?: Array<AuthenticationObject>;
    /**
     * Messages to the TPP on operational issues.
     */
    tppMessages?: Array<PaymentInitialisationResponse.TppMessagesEnum>;
    /**
     * If it equals “true”, the TPP prefers a redirect over an embedded SCA approach.
     */
    tppRedirectPreferred?: boolean;
    /**
     * If equals true, the transaction will involve specific transaction cost as shown by the ASPSP in their public price list or as agreed between ASPSP and PSU.
     */
    transactionFeeIndicator?: boolean;
    /**
     * Can be used by the ASPSP to transport transaction fees relevant for the underlying payments.
     */
    transactionFees?: Amount;
    transactionStatus?: string;
}
export namespace PaymentInitialisationResponse {
    export type TppMessagesEnum = 'CERTIFICATE_INVALID' | 'CERTIFICATE_EXPIRED' | 'CERTIFICATE_BLOCKED' | 'CERTIFICATE_REVOKED' | 'CERTIFICATE_MISSING' | 'SIGNATURE_INVALID' | 'SIGNATURE_MISSING' | 'FORMAT_ERROR' | 'PSU_CREDENTIALS_INVALID' | 'CORPORATE_ID_INVALID' | 'CONSENT_INVALID' | 'CONSENT_EXPIRED' | 'TOKEN_UNKNOWN' | 'TOKEN_INVALID' | 'TOKEN_EXPIRED' | 'TIMESTAMP_INVALID' | 'PERIOD_INVALID' | 'SCA_METHOD_UNKNOWN' | 'TRANSACTION_ID_INVALID' | 'PRODUCT_INVALID' | 'PRODUCT_UNKNOWN' | 'PAYMENT_FAILED' | 'REQUIRED_KID_MISSING' | 'EXECUTION_DATE_INVALID' | 'SESSIONS_NOT_SUPPORTED' | 'ACCESS_EXCEEDED' | 'REQUESTED_FORMATS_INVALID' | 'SERVICE_INVALID_401' | 'SERVICE_INVALID_405' | 'SERVICE_BLOCKED' | 'CONSENT_UNKNOWN_403' | 'CONSENT_UNKNOWN_400' | 'RESOURCE_UNKNOWN_404' | 'RESOURCE_UNKNOWN_403' | 'RESOURCE_UNKNOWN_400' | 'RESOURCE_EXPIRED_403' | 'RESOURCE_EXPIRED_400' | 'PARAMETER_NOT_SUPPORTED' | 'BEARER_TOKEN_EMPTY' | 'INTERNAL_SERVER_ERROR' | 'UNAUTHORIZED';
    export const TppMessagesEnum = {
        CERTIFICATEINVALID: 'CERTIFICATE_INVALID' as TppMessagesEnum,
        CERTIFICATEEXPIRED: 'CERTIFICATE_EXPIRED' as TppMessagesEnum,
        CERTIFICATEBLOCKED: 'CERTIFICATE_BLOCKED' as TppMessagesEnum,
        CERTIFICATEREVOKED: 'CERTIFICATE_REVOKED' as TppMessagesEnum,
        CERTIFICATEMISSING: 'CERTIFICATE_MISSING' as TppMessagesEnum,
        SIGNATUREINVALID: 'SIGNATURE_INVALID' as TppMessagesEnum,
        SIGNATUREMISSING: 'SIGNATURE_MISSING' as TppMessagesEnum,
        FORMATERROR: 'FORMAT_ERROR' as TppMessagesEnum,
        PSUCREDENTIALSINVALID: 'PSU_CREDENTIALS_INVALID' as TppMessagesEnum,
        CORPORATEIDINVALID: 'CORPORATE_ID_INVALID' as TppMessagesEnum,
        CONSENTINVALID: 'CONSENT_INVALID' as TppMessagesEnum,
        CONSENTEXPIRED: 'CONSENT_EXPIRED' as TppMessagesEnum,
        TOKENUNKNOWN: 'TOKEN_UNKNOWN' as TppMessagesEnum,
        TOKENINVALID: 'TOKEN_INVALID' as TppMessagesEnum,
        TOKENEXPIRED: 'TOKEN_EXPIRED' as TppMessagesEnum,
        TIMESTAMPINVALID: 'TIMESTAMP_INVALID' as TppMessagesEnum,
        PERIODINVALID: 'PERIOD_INVALID' as TppMessagesEnum,
        SCAMETHODUNKNOWN: 'SCA_METHOD_UNKNOWN' as TppMessagesEnum,
        TRANSACTIONIDINVALID: 'TRANSACTION_ID_INVALID' as TppMessagesEnum,
        PRODUCTINVALID: 'PRODUCT_INVALID' as TppMessagesEnum,
        PRODUCTUNKNOWN: 'PRODUCT_UNKNOWN' as TppMessagesEnum,
        PAYMENTFAILED: 'PAYMENT_FAILED' as TppMessagesEnum,
        REQUIREDKIDMISSING: 'REQUIRED_KID_MISSING' as TppMessagesEnum,
        EXECUTIONDATEINVALID: 'EXECUTION_DATE_INVALID' as TppMessagesEnum,
        SESSIONSNOTSUPPORTED: 'SESSIONS_NOT_SUPPORTED' as TppMessagesEnum,
        ACCESSEXCEEDED: 'ACCESS_EXCEEDED' as TppMessagesEnum,
        REQUESTEDFORMATSINVALID: 'REQUESTED_FORMATS_INVALID' as TppMessagesEnum,
        SERVICEINVALID401: 'SERVICE_INVALID_401' as TppMessagesEnum,
        SERVICEINVALID405: 'SERVICE_INVALID_405' as TppMessagesEnum,
        SERVICEBLOCKED: 'SERVICE_BLOCKED' as TppMessagesEnum,
        CONSENTUNKNOWN403: 'CONSENT_UNKNOWN_403' as TppMessagesEnum,
        CONSENTUNKNOWN400: 'CONSENT_UNKNOWN_400' as TppMessagesEnum,
        RESOURCEUNKNOWN404: 'RESOURCE_UNKNOWN_404' as TppMessagesEnum,
        RESOURCEUNKNOWN403: 'RESOURCE_UNKNOWN_403' as TppMessagesEnum,
        RESOURCEUNKNOWN400: 'RESOURCE_UNKNOWN_400' as TppMessagesEnum,
        RESOURCEEXPIRED403: 'RESOURCE_EXPIRED_403' as TppMessagesEnum,
        RESOURCEEXPIRED400: 'RESOURCE_EXPIRED_400' as TppMessagesEnum,
        PARAMETERNOTSUPPORTED: 'PARAMETER_NOT_SUPPORTED' as TppMessagesEnum,
        BEARERTOKENEMPTY: 'BEARER_TOKEN_EMPTY' as TppMessagesEnum,
        INTERNALSERVERERROR: 'INTERNAL_SERVER_ERROR' as TppMessagesEnum,
        UNAUTHORIZED: 'UNAUTHORIZED' as TppMessagesEnum
    };
}
