---
timezone: Europe/Berlin

pullThrough: false

pvcMange: true

keycloak:
  enabled: true
  replicas: 1

  image:
    stream: false
    name: docker.io/jboss/keycloak
    tag: 4.4.0.Final
    namespace: ~
    pullPolicy: IfNotPresent

  storage:
    size: 1Gi

  route:
    host: >-
      {{ template "psd2.fullname" . }}-keycloak-{{ .Release.Namespace }}.cloud.adorsys.de
    annotations:
        console.alpha.openshift.io/overview-app-route: "true"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

  strategy:
    rollingUpdate:
      maxUnavailable: 1

  resources:
    limits:
      memory: 500Mi
  livenessProbe:
    httpGet:
      path: /auth/
      port: http
    initialDelaySeconds: 120
    timeoutSeconds: 10
  readinessProbe:
    httpGet:
      path: /auth/
      port: http
    initialDelaySeconds: 10
    timeoutSeconds: 10
    periodSeconds: 10
    failureThreshold: 10

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

  env:
    WILDFLY_LOGLEVEL: info

  admin:
    username: ~
    password: ~

  secrets: {}

  dbVendor: postgres

  db:
    backup:
      enabled: true
    persistence:
      enabled: true

### Add keycloak init config
  realms: {}
#    xs2a: {}
#      clients: {}
#        consent-management: {}
#        xs2a-impl: {}
#      roles: {}
#      users:
#        mock-user: {}
#        test: {}

xs2a:
  enabled: true
  replicas: 1

  image:
    name: adorsys/xs2a-service
    tag: develop
    stream: false
    namespace: ~
    pullPolicy: IfNotPresent

  route:
    host: >-
      {{ template "psd2.fullname" . }}-xs2a-{{ .Release.Namespace }}.cloud.adorsys.de
    annotations:
        console.alpha.openshift.io/overview-app-route: "true"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

  env:
    MOCKSPI_BASEURL: http://{{ template "psd2.fullname" . }}-aspsp-mock:8080
    CONSENT_SERVICE_BASEURL: http://{{ template "psd2.fullname" . }}-cms:8080/api/v1
    ASPSP_PROFILE_BASEURL: http://{{ template "psd2.fullname" . }}-aspspprofile:8080/api/v1
    skip_ssl_certificate_verification: true
    KEYCLOAK_AUTH_SERVER_URL: https://{{ tpl .Values.keycloak.route.host $ }}/auth

  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 120
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

aspspMock:
  enabled: true
  replicas: 1

  image:
    name: adorsys/xs2a-mock-server
    tag: develop
    stream: false
    namespace: ~
    pullPolicy: IfNotPresent

  route:
    host: >-
      {{ template "psd2.fullname" . }}-aspsp-mock-{{ .Release.Namespace }}.cloud.adorsys.de
    annotations:
        console.alpha.openshift.io/overview-app-route: "true"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

  resources:
    requests:
      memory: 200Mi
    limits:
      memory: 400Mi

  env:
    SPRING_DATA_MONGODB_HOST: '{{ template "psd2.fullname" . }}-mock-db'
    SPRING_DATA_MONGODB_PORT: 27017
    SPRING_DATA_MONGODB_DATABASE: spimock
    KEYCLOAK_CREDENTIALS_SECRET: ~
    KEYCLOAK_AUTH_SERVER_URL: https://{{ tpl .Values.keycloak.route.host $ }}/auth
    spring_mail_host: http://{{ template "psd2.fullname" . }}-mailout
    spring_mail_port: 25
    spring_mail_properties_mail_smtp_auth: "false"
    spring_mail_properties_mail_smtp_starttls_enable: "false"
    spring_mail_properties_mail_from: dst@adorsys.com.ua
    ASPSP_PROFILE_BASEURL: http://{{ template "psd2.fullname" . }}-aspspprofile:8080/api/v1
    CONSENT_SERVICE_BASEURL: http://{{ template "psd2.fullname" . }}-cms:8080/api/v1

  secrets:
    db_secret: ~

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

  livenessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 1
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /health
      port: http
    initialDelaySeconds: 3
    timeoutSeconds: 1
    periodSeconds: 10

  db:
    image:
      name: docker.io/library/mongo
      tag: 3.6
      stream: false

    admin:
      password: ~

    user:
      username: ~
      password: ~
    database:
      name: ~

    persistence:
      enabled: true
      size: 1Gi
      storageClass: ~
      mountPath: "/data/db"

    deploymentAnnotations: {}
    podAnnotations: {}
    serviceAnnotations: {}

    resources:
      limits:
        memory: 200Mi
    livenessProbe:
      initialDelaySeconds: 30
      tcpSocket:
        port: 27017
      timeoutSeconds: 1
    readinessProbe:
      exec:
#        command: ["/bin/sh", "-i", "-c", "mongo 127.0.0.1:27017/admin -u admin -p $MONGODB_ADMIN_PASSWORD --eval=\"quit()\""]
        command: ["mongo", "--eval", "db.adminCommand('ping')"]
      initialDelaySeconds: 3
      timeoutSeconds: 1
      failureThreshold: 10

cms:
  enabled: true
  replicas: 1

  image:
    name: adorsys/xs2a-consent-management
    tag: develop
    stream: false
    pullPolicy: IfNotPresent
    namespace: ~

  route:
    enabled: true
    host: >-
      {{ template "psd2.fullname" . }}-cms-{{ .Release.Namespace }}.cloud.adorsys.de
    annotations:
        console.alpha.openshift.io/overview-app-route: "true"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

  env:
    spring_datasource_url: jdbc:postgresql://{{ template "psd2.fullname" . }}-cms-db/cms
    spring_jpa_properties_hibernate_default_schema: cms
    MOCKSPI_BASEURL: http://{{ template "psd2.fullname" . }}-aspsp-mock:8080
    ASPSP_PROFILE_BASEURL: http://{{ template "psd2.fullname" . }}-aspspprofile:8080/api/v1
    skip_ssl_certificate_verification: true
    KEYCLOAK_AUTH_SERVER_URL: https://{{ tpl .Values.keycloak.route.host $ }}/auth
    KEYCLOAK_CREDENTIALS_SECRET: ~

  secrets:
    existingSecret: ~

  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 128Mi

  livenessProbe:
      httpGet:
          path: /auth/
          port: http
      initialDelaySeconds: 120
      timeoutSeconds: 10
  readinessProbe:
      httpGet:
          path: /auth/
          port: http
      initialDelaySeconds: 10
      timeoutSeconds: 10
      periodSeconds: 10
      failureThreshold: 10

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

  db:
    backup:
      enabled: true
    persistence:
      enabled: true

aspspProfile:
  enabled: true
  replicas: 1

  image:
    name: adorsys/xs2a-aspsp-profile
    tag: develop
    stream: false
    namespace: ~
    pullPolicy: IfNotPresent

  route:
    enabled: true
    host: >-
      {{ template "psd2.fullname" . }}-aspspprofile-{{ .Release.Namespace }}.cloud.adorsys.de
    annotations:
        console.alpha.openshift.io/overview-app-route: "true"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

  env:
    SPRING_PROFILES_ACTIVE: debug_mode
    BANK_PROFILE_PATH: /aspsp-profile-settings.yml/aspsp-profile-settings-integ.yml

  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 120
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

cmsPortal:
  enabled: true
  replicas: 1

  image:
    name: adorsys/xs2a-mock-online-banking-backend
    tag: develop
    stream: false
    namespace: ~
    pullPolicy: IfNotPresent

  route:
    enabled: true
    host: >-
      {{ template "psd2.fullname" . }}-cmsportal-{{ .Release.Namespace }}.cloud.adorsys.de
    annotations:
        console.alpha.openshift.io/overview-app-route: "true"
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge

  env:
    MOCKSPI_BASEURL: http://{{ template "psd2.fullname" . }}-aspsp-mock:8080
    CONSENT_SERVICE_BASEURL: http:/{{ template "psd2.fullname" . }}-cms:8080/api/v1

  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 128Mi

  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 120
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

mailout:
  enabled: true
  replicas: 1

  image:
    stream: false
    name: docker.io/jkroepke/openshift-mta
    tag: '@sha256:09237404bb97f9bba8ec75919f8cd5c1fc868cd6e2753f578f6ff05dd2e8951a'
    namespace: ~
    pullPolicy: IfNotPresent

  env:
    LIBLOGFAF_SENDTO: /dev/tty
    SENDMAIL_DISABLE_SENDER_RDNS: "true"
    SENDMAIL_DEFINE_SMART_HOST: "smtp.sendgrid.net:587"
    SENDMAIL_ACCESS: "Connect:10 RELAY"
    SENDMAIL_FORCE_TLS_VERIFY: "true"
    SENDMAIL_ROOT_ALIAS: /dev/null
    SENDMAIL_DEFINE_confPRIVACY_FLAGS: public
    SENDMAIL_DEFINE_confMIN_QUEUE_AGE: "10"
    SENDMAIL_DEFINE_confSAFE_QUEUE: "false"
    SENDMAIL_DEFINE_confREFUSE_LA: "0"
    SENDMAIL_DEFINE_confQUEUE_LA: "0"

  secrets: {}

  existingSecret: smtp-secret-mailout

  resources:
    limits:
      cpu: 100m
      memory: 150Mi
    requests:
      cpu: 10m
      memory: 50Mi

  readinessProbe:
    exec:
      command:
        - /healthcheck.sh

  livenessProbe:
    exec:
      command:
        - /healthcheck.sh
    initialDelaySeconds: 5

  persistence:
    enabled: false
    # storageClass: "-"
    size: 1Gi

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

postgres:
  enabled: true
  slave:
    enabled: false

  image:
    stream: false
    name: docker.io/centos/postgresql-10-centos7
    tag: '@sha256:fc33219a2a204ea29bd12da87227454a79671ede5e75235768925fa153a98b30'
    namespace: ~
    pullPolicy: IfNotPresent

  persistence:
    enabled: true
    size: 1Gi
    storageClass: ~

  secrets:
    POSTGRESQL_ADMIN_PASSWORD: xs2acms
    POSTGRESQL_USER: aspspcms
    POSTGRESQL_PASSWORD: xs2acms
    POSTGRESQL_DATABASE: cms
  ###    Slave Env
  #    POSTGRESQL_MASTER_USER: example
  #    POSTGRESQL_MASTER_PASSWORD: example

  resources:
    requests:
      memory: 128Mi
      cpu: 250m
    limits:
      memory: 256Mi
      cpu: 500m

  livenessProbe:
    exec:
      command: [/usr/libexec/check-container, --live]
    initialDelaySeconds: 120
    timeoutSeconds: 10
  readinessProbe:
    exec:
      command: [/usr/libexec/check-container]
    initialDelaySeconds: 5
    timeoutSeconds: 10

  metrics:
    enabled: false
    resources:
      requests:
        memory: 64Mi
        cpu: 100m
      limits:
        memory: 128Mi
        cpu: 200m
    image:
      stream: false
      name: docker.io/wrouesnel/postgres_exporter
      tag: v0.4.6
      namespace: ~
      pullPolicy: IfNotPresent
    customMetrics:
      enabled: false
      value:
  #    pg_database:
  #      query: "SELECT d.datname AS name, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
  #      metrics:
  #        - name:
  #            usage: "LABEL"
  #            description: "Name of the database"
  #        - size_bytes:
  #            usage: "GAUGE"
  #            description: "Size of the database in bytes"
  backup:
    enabled: true
    schedule: "0 1 * * *"
    retention: 7
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
    persistence:
      size: 10Gi
      storageClass: ~

  deploymentAnnotations: {}
  podAnnotations: {}
  serviceAnnotations: {}

extraEnv: |
  - name: JAVA_OPTS
    value: >-
      -XX:+UnlockExperimentalVMOptions
      -XX:+UseCGroupMemoryLimitForHeap
      -Dsun.zip.disableMemoryMapping=true
      -XX:MaxRAMFraction=1
      -XX:+UseParallelGC
      -XX:MinHeapFreeRatio=5
      -XX:MaxHeapFreeRatio=10
      -XX:GCTimeRatio=4
      -XX:AdaptiveSizePolicyWeight=90
