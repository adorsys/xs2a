{{- if .Values.keycloak.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": "post-install,post-upgrade,post-rollback"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook-weight": "5"
  name: {{ template "psd2.fullname" . }}-keycloak-init
  labels:
{{ include "psd2.labels" . | indent 4 }}
    app.kubernetes.io/component: keycloak-init
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        alpha.image.policy.openshift.io/resolve-names: '*'
      labels:
{{ include "psd2.matchLabels" . | indent 8 }}
        app.kubernetes.io/component: keycloak-init
    spec:
      restartPolicy: Never
      containers:
      - name: keycloak
        image: "{{- if .Values.keycloak.image.namespace }}{{ .Values.keycloak.image.namespace }}/{{- end }}{{- if .Values.keycloak.image.stream }}{{ .Values.keycloak.image.name }}:{{ default "latest" .Values.keycloak.image.tag }}{{- else }}{{ template "psd2.fullname" . }}-keycloak:latest{{- end }}"
        imagePullPolicy: {{ .Values.keycloak.image.pullPolicy }}
        command: ["/scripts/init.sh"]
        resources:
          limits:
            memory: 100Mi
            cpu: 100m
        env:
        - name: TZ
          value: {{ .Values.timezone | quote }}
        - name: KEYCLOAK_HOST
          value: "http://{{ template "psd2.fullname" . }}-keycloak:8080"
        - name: KEYCLOAK_USER
          valueFrom:
            secretKeyRef:
              key: admin-username
              name: "{{ template "psd2.fullname" . }}-keycloak"
        - name: KEYCLOAK_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: "{{ template "psd2.fullname" . }}-keycloak"
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: scripts
        secret:
          secretName: "{{ template "psd2.fullname" . }}-keycloak-init"
          defaultMode: 0555
{{- end }}
