{{- if .Values.keycloak.enabled }}
---
{{- $highAvailability := gt (int .Values.keycloak.replicas) 1 -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "psd2.fullname" . }}-keycloak-scripts
  labels:
{{ include "psd2.labels" . | indent 4 }}
    app.kubernetes.io/component: keycloak
    app: aspsp-mock
data:
  keycloak.sh: |
    #!/usr/bin/env bash
    set -eu
    /opt/jboss/keycloak/bin/jboss-cli.sh --file=/scripts/keycloak.cli
    {{- with .Values.keycloak.preStartScript }}
    echo 'Running custom pre-start script...'
{{ . | indent 4 }}
    {{- end }}

    # https://github.com/jboss-dockerfiles/keycloak/blob/master/server/Dockerfile#L28
    exec /opt/jboss/docker-entrypoint.sh -b 0.0.0.0 {{- if $highAvailability }} --server-config standalone-ha.xml{{ end }}
    exit "$?"

  keycloak.cli: |
    embed-server {{- if $highAvailability }} --server-config=standalone-ha.xml{{ end }} --std-out=discard

    /subsystem=transactions:write-attribute(name=node-identifier, value=${env.POD_IP})

    {{- if $highAvailability }}
    # https://medium.com/@mickael.gregori/configure-jgroups-to-run-keycloak-in-clustered-mode-8991fd655e74
    # https://github.com/helm/charts/blob/master/stable/keycloak/values.yaml#L128
    /subsystem=infinispan/cache-container=keycloak/distributed-cache=sessions:write-attribute(name=owners, value=${env.CACHE_OWNERS:2})
    /subsystem=infinispan/cache-container=keycloak/distributed-cache=authenticationSessions:write-attribute(name=owners, value=${env.CACHE_OWNERS:2})
    /subsystem=infinispan/cache-container=keycloak/distributed-cache=offlineSessions:write-attribute(name=owners, value=${env.CACHE_OWNERS:2})
    /subsystem=infinispan/cache-container=keycloak/distributed-cache=loginFailures:write-attribute(name=owners, value=${env.CACHE_OWNERS:2})

    /subsystem=jgroups/stack=tcp/protocol=MPING :remove()
    /subsystem=jgroups/stack=tcp/protocol=dns.DNS_PING :add(add-index=0,properties=[dns_query="{{ template "psd2.fullname" . }}-keycloak-ping.${env.POD_NAMESPACE}"])

    /subsystem=jgroups/channel=ee:write-attribute(name=stack, value=tcp)
    /subsystem=jgroups/stack=udp:remove()

    /socket-binding-group=standard-sockets/socket-binding=jgroups-mping:remove()
    /socket-binding-group=standard-sockets/socket-binding=jgroups-udp:remove()

    /subsystem=modcluster/mod-cluster-config=configuration/:write-attribute(name=advertise,value=false)

    /socket-binding-group=standard-sockets/socket-binding=jgroups-tcp/:write-attribute(name=interface,value=public)
    /interface=public:write-attribute(name=inet-address, value=${env.POD_IP})
    {{- end }}
{{- end }}
