{
	"info": {
		"_postman_id": "a5b8c1c0-6738-49c9-8874-741462cee654",
		"name": "3_2 Payment cancellation redirect URL expiration",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Payment initiation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "96d686a3-5f56-4cd2-b043-50dc3bf36d7c",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Transcation status is RCVD\", () => {",
							"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
							"});",
							"",
							"pm.test(\"Start authorisation link exists\", () => {",
							"    pm.expect(jsonData).to.have.property('_links');",
							"    const _links = jsonData._links;",
							"    ",
							"    var expl = _links.startAuthorisationWithPsuAuthentication;",
							"    var impl = _links.startAuthorisation;",
							"  ",
							"    if (expl === undefined && impl === undefined) {",
							"       pm.expect().fail();",
							"    }",
							"});",
							"",
							"pm.test(\"Select other links exist\", () => {",
							"    pm.expect(jsonData).to.have.property('_links');",
							"    const _links = jsonData._links;",
							"    ",
							"    pm.expect(_links).to.have.property('status');",
							"    pm.expect(_links).to.have.property('self');",
							"});",
							"",
							"pm.test(\"Payment Id exists\", () => {",
							"    pm.expect(jsonData).to.have.property('paymentId');",
							"});",
							"",
							"pm.test(\"Transaction Fee Indicator exists\", () => {",
							"    pm.expect(jsonData).to.have.property('transactionFeeIndicator');",
							"});",
							"",
							"pm.globals.set(\"payment_id\", jsonData.paymentId);",
							"pm.globals.set(\"startAuthorisation\", jsonData.links.startAuthorisation);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b4cbc456-5fd9-4fd5-a8cc-c601b228c824",
						"exec": [
							"pm.globals.unset(\"payment_id\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "PSU-IP-Address",
						"value": "{{ip_address}}"
					},
					{
						"key": "X-Request-ID",
						"value": "{{x_request_id}}"
					},
					{
						"key": "TPP-Explicit-Authorisation-Preferred",
						"value": "true",
						"type": "text"
					},
					{
						"key": "PSU-ID",
						"value": "{{psu_id_none}}",
						"type": "text"
					},
					{
						"key": "TPP-Redirect-URI",
						"value": "TPP-Redirect-URI",
						"type": "text"
					},
					{
						"key": "TPP-Nok-Redirect-URI",
						"value": "TPP-Nok-Redirect-URI",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"endToEndIdentification\": \"RI-1234567890\",\n\"debtorAccount\": {\n  \"currency\": \"EUR\",\n  \"iban\": \"DE89370400440532013000\"\n },\n\"instructedAmount\": {\n  \"amount\": 1000,\n  \"currency\": \"EUR\"\n },\n\"creditorAccount\": {\n  \"currency\": \"EUR\",\n  \"iban\": \"DE89370400440532013000\"\n },\n\"creditorAgent\": \"Some AGENT\",\n\"creditorName\": \"Telekom\",\n \"creditorAddress\": {\n  \"buildingNumber\": \"123-34\",\n  \"city\": \"Nürnberg\",\n  \"country\": \"49\",\n  \"postalCode\": 90431,\n  \"street\": \"Herrnstraße\"\n },\n \"remittanceInformationUnstructured\": \"Ref. Number TELEKOM-1222\"\n }"
				},
				"url": {
					"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url_xs2a}}"
					],
					"path": [
						"v1",
						"{{payment_service}}",
						"{{payment_product}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Cancel payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b891d5cb-5fba-410f-9793-cc40df8bb179",
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"",
							"pm.test(\"Transaction Status exists\", () => {",
							"    pm.expect(jsonData).to.have.property('transactionStatus', 'ACTC');",
							"});",
							"",
							"pm.test(\"Start authorisation link exists\", () => {",
							"    pm.expect(jsonData).to.have.property('_links');",
							"    const _links = jsonData._links;",
							"    ",
							"    var expl = _links.startAuthorisationWithPsuAuthentication;",
							"    var impl = _links.startAuthorisation;",
							"  ",
							"    if (expl === undefined && impl === undefined) {",
							"       pm.expect().fail();",
							"    }",
							"});",
							"",
							"pm.test(\"Select other links exist\", () => {",
							"    pm.expect(jsonData).to.have.property('_links');",
							"    const _links = jsonData._links;",
							"    ",
							"    pm.expect(_links).to.have.property('status');",
							"    pm.expect(_links).to.have.property('self');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "PSU-IP-Address",
						"value": "{{ip_address}}"
					},
					{
						"key": "X-Request-ID",
						"value": "{{x_request_id}}"
					},
					{
						"key": "TPP-Explicit-Authorisation-Preferred",
						"value": "true",
						"type": "text"
					}
				],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{url_xs2a}}/v1/payments/{{payment_id}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url_xs2a}}"
					],
					"path": [
						"v1",
						"payments",
						"{{payment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Start cancellation authorisation",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1eddaafd-18cd-4244-a860-794ddabe95a4",
						"exec": [
							"const jsonData = pm.response.json();",
							"",
							"// const authorisationId = jsonData.links.startAuthorisationWithPsuAuthentication.split('/').pop();",
							"const authorisationId = jsonData.links.scaStatus.split('/').pop();",
							"",
							"pm.globals.set(\"authorisation_id\", authorisationId);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Select scaStatus \", () => {",
							"    pm.expect(jsonData).to.have.property('scaStatus');",
							"    const scaStatus = jsonData.scaStatus;",
							"    pm.expect(scaStatus).to.eql('received');",
							"});",
							"",
							"pm.test(\"Links exist\", () => {",
							"    pm.expect(jsonData).to.have.property('_links');",
							"    const _links = jsonData._links;",
							"    ",
							"    pm.expect(_links).to.have.property('status');",
							"    pm.expect(_links).to.have.property('self');",
							"    pm.expect(_links).to.have.property('startAuthorisationWithPsuAuthentication');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "PSU-ID",
						"value": "{{psu_id_none}}"
					},
					{
						"key": "PSU-IP-Address",
						"value": "{{ip_address}}"
					},
					{
						"key": "X-Request-ID",
						"value": "{{x_request_id}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{protocol}}://{{url_xs2a}}/v1/payments/{{payment_id}}/cancellation-authorisations",
					"protocol": "{{protocol}}",
					"host": [
						"{{url_xs2a}}"
					],
					"path": [
						"v1",
						"payments",
						"{{payment_id}}",
						"cancellation-authorisations"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Get payment by redirect id",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "instance-id",
						"value": "UNDEFINED",
						"type": "text"
					},
					{
						"key": "psu-id",
						"value": "{{psu_id_none}}",
						"type": "text"
					},
					{
						"key": "psu-id-type",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "psu-corporate-id",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "psu-corporate-id-type",
						"value": "",
						"type": "text",
						"disabled": true
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{protocol}}://{{url_cms}}/psu-api/v1/pis/consent/redirects/cancellation/{{authorisation_id}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{url_cms}}"
					],
					"path": [
						"psu-api",
						"v1",
						"pis",
						"consent",
						"redirects",
						"cancellation",
						"{{authorisation_id}}"
					]
				}
			},
			"response": []
		}
	]
}