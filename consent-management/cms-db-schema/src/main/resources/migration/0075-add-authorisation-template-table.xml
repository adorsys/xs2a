<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ Copyright 2018-2024 adorsys GmbH & Co KG
  ~
  ~ This program is free software: you can redistribute it and/or modify it
  ~ under the terms of the GNU Affero General Public License as published
  ~ by the Free Software Foundation, either version 3 of the License, or (at
  ~ your option) any later version. This program is distributed in the hope that
  ~ it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program. If not, see https://www.gnu.org/licenses/.
  ~
  ~ This project is also available under a separate commercial license. You can
  ~ contact us at sales@adorsys.com.
  -->

<databaseChangeLog logicalFilePath="db.changelog-1.0.xml" xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-1">
        <comment>Add authorisation_template table</comment>

        <createSequence sequenceName="authorisation_template_id_seq"/>
        <sql dbms="mariadb">CREATE SEQUENCE authorisation_template_id_seq</sql>
    </changeSet>

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-2">
        <comment>Add authorisation_template table</comment>

        <createTable tableName="authorisation_template">
            <column name="authorisation_template_id" type="BIGINT">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="tpp_info_id" type="BIGINT"/>
            <column name="redirect_uri" type="VARCHAR(255)"/>
            <column name="nok_redirect_uri" type="VARCHAR(255)"/>
            <column name="cancel_redirect_uri" type="VARCHAR(255)"/>
            <column name="cancel_nok_redirect_uri" type="VARCHAR(255)"/>
        </createTable>
    </changeSet>

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-3">
        <comment>Add column authorisation_template_id to ais_consent</comment>

        <addColumn tableName="ais_consent">
            <column name="authorisation_template_id" type="BIGINT"/>
        </addColumn>
    </changeSet>

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-4">
        <comment>Add column authorisation_template_id to pis_common_payment</comment>

        <addColumn tableName="pis_common_payment">
            <column name="authorisation_template_id" type="BIGINT"/>
        </addColumn>
    </changeSet>

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-5">
        <preConditions onFail="MARK_RAN" onSqlOutput="TEST">
            <or>
                <dbms type="postgresql"/>
                <dbms type="mariadb"/>
                <dbms type="oracle"/>
            </or>
        </preConditions>

        <comment>Insert redirect URIs data from tpp_info for PostgreSQL, MariaDB or Oracle</comment>

        <sql dbms="postgresql">
            INSERT INTO authorisation_template (authorisation_template_id, tpp_info_id, redirect_uri, nok_redirect_uri,
            cancel_redirect_uri, cancel_nok_redirect_uri)
            SELECT nextval('authorisation_template_id_seq'), t.* FROM (SELECT tpp_info_id, redirect_uri,
            nok_redirect_uri, cancel_redirect_uri, cancel_nok_redirect_uri
            FROM tpp_info WHERE tpp_info_id NOT IN (SELECT p.tpp_info_id
            FROM piis_consent p WHERE p.tpp_info_id is not null
            )) AS t;
        </sql>

        <sql dbms="mariadb">
            INSERT INTO authorisation_template (authorisation_template_id, tpp_info_id, redirect_uri, nok_redirect_uri,
            cancel_redirect_uri, cancel_nok_redirect_uri)
            SELECT NEXTVAL(authorisation_template_id_seq), t.* FROM (SELECT tpp_info_id, redirect_uri, nok_redirect_uri,
            cancel_redirect_uri, cancel_nok_redirect_uri
            FROM tpp_info WHERE tpp_info_id NOT IN (SELECT p.tpp_info_id
            FROM piis_consent p WHERE p.tpp_info_id is not null
            )) AS t;
        </sql>

        <sql dbms="oracle">
            INSERT INTO authorisation_template (authorisation_template_id, tpp_info_id, redirect_uri, nok_redirect_uri,
            cancel_redirect_uri, cancel_nok_redirect_uri)
            SELECT authorisation_template_id_seq.nextval, t.* FROM (SELECT tpp_info_id, redirect_uri, nok_redirect_uri,
            cancel_redirect_uri, cancel_nok_redirect_uri
            FROM tpp_info WHERE tpp_info_id NOT IN (SELECT p.tpp_info_id
            FROM piis_consent p WHERE p.tpp_info_id is not null
            )) t;
        </sql>

    </changeSet>

    <changeSet author="amu@adorsys.de" id="2019-08-19-7">
        <preConditions onFail="MARK_RAN" onSqlOutput="TEST">
            <or>
                <dbms type="postgresql"/>
                <dbms type="mariadb"/>
                <dbms type="oracle"/>
            </or>
        </preConditions>

        <comment>Set authorisation_template_id in ais_consent</comment>

        <sql dbms="postgresql">
            UPDATE ais_consent a
            SET authorisation_template_id = tmp.authorisation_template_id
            FROM (SELECT aut.authorisation_template_id, a.tpp_info_id FROM authorisation_template aut
            INNER JOIN ais_consent a ON a.tpp_info_id = aut.tpp_info_id) tmp
            WHERE a.tpp_info_id = tmp.tpp_info_id;
        </sql>

        <sql dbms="mariadb">
            UPDATE ais_consent a
            INNER JOIN authorisation_template aut ON a.tpp_info_id = aut.tpp_info_id
            SET a.authorisation_template_id = aut.authorisation_template_id;
        </sql>

        <sql dbms="oracle">
            UPDATE ais_consent a
            SET a.authorisation_template_id = ( SELECT aut.authorisation_template_id
            FROM authorisation_template aut
            WHERE a.tpp_info_id = aut.tpp_info_id );
        </sql>
    </changeSet>

    <changeSet author="amu@adorsys.de" id="2019-08-19-8">
        <preConditions onFail="MARK_RAN" onSqlOutput="TEST">
            <or>
                <dbms type="postgresql"/>
                <dbms type="mariadb"/>
                <dbms type="oracle"/>
            </or>
        </preConditions>

        <comment>Set authorisation_template_id in pis_common_payment</comment>

        <sql dbms="postgresql">
            UPDATE pis_common_payment p
            SET authorisation_template_id = tmp.authorisation_template_id
            FROM (SELECT aut.authorisation_template_id, p.tpp_info_id FROM authorisation_template aut
            INNER JOIN pis_common_payment p ON p.tpp_info_id = aut.tpp_info_id) tmp
            WHERE p.tpp_info_id = tmp.tpp_info_id;
        </sql>

        <sql dbms="mariadb">
            UPDATE pis_common_payment p
            INNER JOIN authorisation_template aut ON p.tpp_info_id = aut.tpp_info_id
            SET p.authorisation_template_id = aut.authorisation_template_id;
        </sql>

        <sql dbms="oracle">
            UPDATE pis_common_payment p
            SET p.authorisation_template_id = ( SELECT aut.authorisation_template_id
            FROM authorisation_template aut
            WHERE p.tpp_info_id = aut.tpp_info_id );
        </sql>
    </changeSet>

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-10">
        <comment>Add foreign key fk_ais_authorisation_template_id to ais_consent</comment>

        <addForeignKeyConstraint baseColumnNames="authorisation_template_id"
                                 baseTableName="ais_consent"
                                 constraintName="fk_ais_auth_template_id" deferrable="false"
                                 initiallyDeferred="false"
                                 referencedColumnNames="authorisation_template_id"
                                 referencedTableName="authorisation_template"/>
    </changeSet>

    <changeSet author="amu@adorsys.com.ua" id="2019-08-19-11">
        <comment>Add foreign key fk_pis_authorisation_template_id to ais_consent</comment>

        <addForeignKeyConstraint baseColumnNames="authorisation_template_id"
                                 baseTableName="pis_common_payment"
                                 constraintName="fk_pis_auth_template_id" deferrable="false"
                                 initiallyDeferred="false"
                                 referencedColumnNames="authorisation_template_id"
                                 referencedTableName="authorisation_template"/>
    </changeSet>

</databaseChangeLog>
