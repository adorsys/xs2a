# ------------------------------------------------------------------
# Global settings
# ------------------------------------------------------------------

cache:
  paths:
    - /builds/adorsys/xs2a/aspsp-xs2a/.m2/repository

# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
- "build:src"    # build jar and provide as artifact
- "build:qa"     # run tests and code quality checks
- "build:image"  # dockerize jar and push to docker registry
# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
- "deploy"       # push to openshift registry (snapshot deployment) or release registry
- "deploy:static"  # push to openshift deployment helm configuration


# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables: &variables

  ###########################
  # Docker images variables #
  ###########################

  GITLAB_REGISTRY: "gitlab-registry.adorsys.de"
  GITLAB_NAMESPACE: "adorsys/xs2a/aspsp-xs2a"
  OPENSHIFT_REGISTRY: "openshift-registry.adorsys.de:443"
  OPENSHIFT_NAMESPACE: "multibanking-xs2a"

  SONAR_HOST: "https://psd2-quality.cloud.adorsys.de"

  # XS2A Service
  GITLAB_IMAGE_NAME_XS2A: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}"
  OPENSHIFT_IMAGE_NAME_XS2A: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/aspsp-xs2a"

  # Content management service
  GITLAB_IMAGE_NAME_CNT_MGMNT: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/cnt-mgmnt"
  OPENSHIFT_IMAGE_NAME_CNT_MGMNT: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/xs2a-cnt-mgmnt"

  # ASPSP Mock Server
  GITLAB_IMAGE_NAME_MOCKSRV: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/aspsp-mock-server"
  OPENSHIFT_IMAGE_NAME_MOCKSRV: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/aspsp-mock-server"

  # XS2A IDP Keycloak
  GITLAB_IMAGE_NAME_KEYCLOAK: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/keycloak-xs2a"
  OPENSHIFT_IMAGE_NAME_KEYCLOAK: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/keycloak-xs2a"

  # XS2A IDP ASPSP Profile
  GITLAB_IMAGE_NAME_ASPSP_PROFILE: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/xs2a-aspsp-profile"
  OPENSHIFT_IMAGE_NAME_ASPSP_PROFILE: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/xs2a-aspsp-profile"

  # Online banking demo
  GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/online-banking-demo"
  OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_DEMO: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/online-banking-demo"

  # Online banking UIapp
  GITLAB_IMAGE_NAME_ONLINE_BANKING_UI: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/online-banking-ui"
  OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_UI: "${OPENSHIFT_REGISTRY}/${OPENSHIFT_NAMESPACE}/online-banking-ui"


  DOCKER_IMAGE_NAME_XS2A: "docker.io/adorsys/xs2a-service"
  DOCKER_IMAGE_NAME_CNT_MGMNT: "docker.io/adorsys/xs2a-consent-management"
  DOCKER_IMAGE_NAME_MOCKSRV: "docker.io/adorsys/xs2a-mock-server"
  DOCKER_IMAGE_NAME_KEYCLOAK: "docker.io/adorsys/xs2a-idp"
  DOCKER_IMAGE_NAME_ASPSP_PROFILE: "docker.io/adorsys/xs2a-aspsp-profile"
  DOCKER_IMAGE_NAME_ONLINE_BANKING_BACKEND: "docker.io/adorsys/xs2a-mock-online-banking-backend"
  DOCKER_IMAGE_NAME_ONLINE_BANKING_UI: "docker.io/adorsys/xs2a-mock-online-banking-ui"
  DOCKER_IMAGE_NAME_LEDGERS: "docker.io/adorsys/ledgers"
  DOCKER_IMAGE_NAME_CONNECTOR_EXAMPLES: "docker.io/adorsys/xs2a-connector-examples"
  DOCKER_IMAGE_NAME_ONLINE_BANKING: "docker.io/adorsys/xs2a-online-banking"

  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAM=3G -XX:MaxRAMFraction=3"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"


  ###########################
  # Deployment variables    #
  ###########################

  DEV_NAMESPACE: adorsys-psd2-develop
  INTEG_NAMESPACE: adorsys-psd2-integ
  DEMO_NAMESPACE: adorsys-psd2-demo
  TILLER_NAMESPACE: adorsys-psd2-tiller
  ANSIBLE_VAULT_PASSWORD_FILE: /tmp/vault_pass

# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.java_artifacts: &java_artifacts
  paths:
    - "spi-mock/target/spi-mock*jar"
    - "consent-management/cms-standalone-service/target/consent-management*jar"
    - "aspsp-profile/aspsp-profile-server/target/aspsp-profile*jar"
    - "aspsp-mock-server/target/aspsp-mock-server*jar"
    - "aspsp-idp/keycloak-provider-extension/keycloak-clientregistration-provider/target/keycloak-clientregistration-provider.jar"
    - "online-banking-demo/target/online-banking-demo*jar"
  name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"

.angular_artifacts: &angular_artifacts
  paths:
    - "online-banking-demo-ui/dist"
  name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}"

.build_java: &build_java
  stage: "build:src"
  image: "adorsys/ci-build"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -DskipTests clean install

.build_angular: &build_angular
  stage: "build:src"
  image: "adorsys/ci-build"
  script:
    - cd online-banking-demo-ui
    - npm install
    - npm run build --prod

.java_tests: &java_tests
  stage: "build:qa"
  image: "adorsys/ci-build"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn --fail-at-end clean install

# Test building docker images
.test_docker_image: &test_docker_image
  script:
    - docker build -t "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG" spi-mock
    - docker build -t "$GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG" aspsp-mock-server
    - docker build -t "$GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG" aspsp-idp
    - docker build -t "$GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG" consent-management/cms-standalone-service
    - docker build -t "$GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG" aspsp-profile/aspsp-profile-server
    - docker build -t "$GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG" online-banking-demo
    - docker build -t "$GITLAB_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG" online-banking-demo-ui


# Build docker images and put them to GITLAB repo
# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
.build_gitlab_docker_image: &build_gitlab_docker_image
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY

    - docker build -t "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG" spi-mock
    - docker push "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG" aspsp-mock-server
    - docker push "$GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG" aspsp-idp
    - docker push "$GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG" consent-management/cms-standalone-service
    - docker push "$GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG" aspsp-profile/aspsp-profile-server
    - docker push "$GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG" online-banking-demo
    - docker push "$GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG"

    - docker build -t "$GITLAB_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG" online-banking-demo-ui
    - docker push "$GITLAB_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG"


# Build docker images and put them to DOCKER HUB repo
.build_dockerhub_image: &build_dockerhub_image
  script:
    - docker build -t "$DOCKER_IMAGE_NAME_XS2A:$DOCKER_TAG" spi-mock
    - docker build -t "$DOCKER_IMAGE_NAME_MOCKSRV:$DOCKER_TAG" aspsp-mock-server
    - docker build -t "$DOCKER_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG" aspsp-idp
    - docker build -t "$DOCKER_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG" consent-management/cms-standalone-service
    - docker build -t "$DOCKER_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG" aspsp-profile/aspsp-profile-server
    - docker build -t "$DOCKER_IMAGE_NAME_ONLINE_BANKING_BACKEND:$DOCKER_TAG" online-banking-demo
    - docker build -t "$DOCKER_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG" online-banking-demo-ui

    - docker login -u $DOCKER_HUB_LOGIN -p $DOCKER_HUB_PASS

    - docker push "$DOCKER_IMAGE_NAME_XS2A:$DOCKER_TAG"
    - docker push "$DOCKER_IMAGE_NAME_MOCKSRV:$DOCKER_TAG"
    - docker push "$DOCKER_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG"
    - docker push "$DOCKER_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG"
    - docker push "$DOCKER_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG"
    - docker push "$DOCKER_IMAGE_NAME_ONLINE_BANKING_BACKEND:$DOCKER_TAG"
    - docker push "$DOCKER_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG"

    - docker logout

# Pull docker images and put them to OPENSHIFT repo
# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
.push_docker_openshift: &push_docker_openshift
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY
    - docker login -u openshift -p $OPENSHIFT_TOKEN $OPENSHIFT_REGISTRY

    - docker pull $GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_XS2A:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_XS2A:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_MOCKSRV:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_MOCKSRV:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_MOCKSRV:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_KEYCLOAK:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_DEMO:$DOCKER_TAG

    - docker pull $GITLAB_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG
    - docker tag $GITLAB_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG $OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG
    - docker push $OPENSHIFT_IMAGE_NAME_ONLINE_BANKING_UI:$DOCKER_TAG

.helm_env_deploy: &helm_env_deploy
  image: adorsys/ci-helm:2.10
  before_script:
    - eval $(gpg-agent --daemon --quiet --allow-preset-passphrase)
    - echo -n "${GPG_KEY}" | gpg --quiet --batch --import -
  script:
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@git.adorsys.de/adorsys/xs2a/xs2a-openshift.git .helm
    - cd .helm/charts/xs2a
    - oc login openshift.adorsys.de --token=${HELM_TOKEN}
      # get docker image commit hashes
    - SHA_XS2A=$(skopeo inspect docker://$DOCKER_IMAGE_NAME_XS2A:$DOCKER_TAG | jq -r .Digest)
    - SHA_CNT_MGMNT=$(skopeo inspect docker://$DOCKER_IMAGE_NAME_CNT_MGMNT:$DOCKER_TAG | jq -r .Digest)
    - SHA_ASPSP_PROFILE=$(skopeo inspect docker://$DOCKER_IMAGE_NAME_ASPSP_PROFILE:$DOCKER_TAG | jq -r .Digest)
    - SHA_LEDGERS=$(skopeo inspect docker://$DOCKER_IMAGE_NAME_LEDGERS:$DOCKER_TAG | jq -r .Digest)
    - SHA_CONNECTOR_EXAMPLES=$(skopeo inspect docker://$DOCKER_IMAGE_NAME_CONNECTOR_EXAMPLES:$DOCKER_TAG | jq -r .Digest)
#    - SHA_CONNECTOR_ONLINE_BANKING=$(skopeo inspect docker://$DOCKER_IMAGE_NAME_ONLINE_BANKING:$DOCKER_TAG | jq -r .Digest)
          # assemble full docker image name
    - IMAGE_WITH_SHA_XS2A="$DOCKER_IMAGE_NAME_XS2A@$SHA_XS2A"
    - IMAGE_WITH_SHA_CNT_MGMNT="$DOCKER_IMAGE_NAME_CNT_MGMNT@$SHA_CNT_MGMNT"
    - IMAGE_WITH_SHA_ASPSP_PROFILE="$DOCKER_IMAGE_NAME_ASPSP_PROFILE@$SHA_ASPSP_PROFILE"
    - IMAGE_WITH_SHA_LEDGERS="$DOCKER_IMAGE_NAME_LEDGERS@$SHA_LEDGERS"
    - IMAGE_WITH_SHA_CONNECTOR_EXAMPLES="$DOCKER_IMAGE_NAME_CONNECTOR_EXAMPLES@$SHA_CONNECTOR_EXAMPLES"
#- IMAGE_WITH_SHA_ONLINE_BANKING="$DOCKER_IMAGE_NAME_ONLINE_BANKING@$SHA_ONLINE_BANKING"
    - |-
      HELM_ARGS=(
        "--set dockerImageXs2a=$IMAGE_WITH_SHA_XS2A"
        "--set dockerImageCntMgmnt=$IMAGE_WITH_SHA_CNT_MGMNT"
        "--set dockerImageAspspProfile=$IMAGE_WITH_SHA_ASPSP_PROFILE"
        "--set dockerImageLedgers=$IMAGE_WITH_SHA_LEDGERS"
        "--set dockerImageConnectorExamples=$IMAGE_WITH_SHA_CONNECTOR_EXAMPLES"
        "-f env/${HELM_STAGE}/env.yaml" 
        "-f env/${HELM_STAGE}/secrets.yaml"
      )
      # diff helm changes
    - helm-wrapper diff upgrade ${HELM_RELEASE} . --allow-unreleased -q ${HELM_ARGS[@]} || true
      # apply helm changes
    - helm-wrapper upgrade -i ${HELM_RELEASE} . --namespace=${OPENSHIFT_NAMESPACE} --wait --timeout=600 --force ${HELM_ARGS[@]}
  after_script:
    - pkill gpg-agent

# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

build_package_java8:
  variables:
    JAVA_VERSION: "system@1.8"
  <<: *build_java

build_package_java11:
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  <<: *build_java
  artifacts:
    <<: *java_artifacts
    expire_in: "1 day"

build_frontend:
  <<: *build_angular
  artifacts:
    <<: *angular_artifacts
    expire_in: "1 day"

pmd_report:
  stage: "build:src"
  image: "adorsys/ci-build"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:pmd
  variables:
    JAVA_VERSION: "system@1.8"
  artifacts:
    paths:
    - "qa/pmd/pmd-ruleset.xml"
    - "**/**/*/pmd.html"
    - "**/*/pmd.xml"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"

check_pmd_java8:
  stage: "build:qa"
  image: "adorsys/ci-build"
  variables:
    JAVA_VERSION: "system@1.8"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:check

check_pmd_java11:
  stage: "build:qa"
  image: "adorsys/ci-build"
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package pmd:check

check_javadoc_java8:
  stage: "build:qa"
  image: "adorsys/ci-build"
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    JAVA_VERSION: "system@1.8"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc
  artifacts:
    paths:
    - "**/target/site/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-javadoc"
    expire_in: "10 day"

check_javadoc_java11:
  stage: "build:qa"
  image: "adorsys/ci-build"
  variables:
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"
    JAVA_VERSION: "system@1.11"
  script:
    - jabba use $JAVA_VERSION
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true -Pjavadoc verify javadoc:javadoc

unit_tests_java8:
  <<: *java_tests
  variables:
    JAVA_VERSION: "system@1.8"
  artifacts:
    paths:
    - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-*"
    expire_in: "10 day"

unit_tests_java11:
  <<: *java_tests
  variables:
    JAVA_VERSION: "system@1.11"
    JAVA_TOOL_OPTIONS: "-Djavax.net.ssl.trustStorePassword=changeit -XX:MaxRAM=3G"

test_build_docker:
  stage: "build:qa"
  <<: *test_docker_image
  variables:
    DOCKER_TAG: "snapshot"


# Develop

deploy_dockerhub_stage:
  stage: "build:image"
  only:
    - develop
    - dgo_automatic_deployments
  variables:
    DOCKER_TAG: develop
  <<: *build_dockerhub_image

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
build_image_integ:
  stage: "build:image"
  only:
    - develop
  variables:
    DOCKER_TAG: integ
  environment:
    name: integ
    url: https://xs2a.integ.cloud.adorsys.de
  <<: *build_gitlab_docker_image

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
deploy_image_integ:
  stage: deploy
  only:
    - develop
  environment:
    name: integ
    url: https://xs2a.integ.cloud.adorsys.de
  variables:
    DOCKER_TAG: integ
  <<: *push_docker_openshift

deploy_develop_stage:
  stage: "deploy:static"
  <<: *helm_env_deploy
  only:
    - develop
  variables:
    <<: *variables
    OPENSHIFT_NAMESPACE: "${DEV_NAMESPACE}"
    DOCKER_TAG: "develop"
    HELM_RELEASE: "${CI_ENVIRONMENT_SLUG}-psd2"
    HELM_STAGE: "develop"
  environment:
    name: dev
    url: ~

sonar_code_coverage:
  stage: "build:qa"
  image: "adorsys/ci-build"
  script:
    - jabba use system@1.8
    - cat /sys/fs/cgroup/memory/memory.limit_in_bytes
    - java -XX:+PrintFlagsFinal -version | grep -Ei "maxheapsize|maxram"
    - mvn -Dmaven.test.skip=true package sonar:sonar -Dsonar.host.url=$SONAR_HOST -Dsonar.login=${SONAR_TOKEN}
  except:
    - tags
    - schedules
    - master
    - release*
    - hotfix*

# Master

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
build_image_master:
  stage: "build:image"
  only:
    - master
  variables:
    DOCKER_TAG: latest
  environment:
    name: demo
  <<: *build_gitlab_docker_image

build_dockerhub_image_master:
  stage: "build:image"
  only:
    - master
  variables:
    DOCKER_TAG: latest
  environment:
    name: demo
  <<: *build_dockerhub_image

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
deploy_image_master:
  stage: deploy
  only:
    - master
  variables:
    DOCKER_TAG: latest
  environment:
    name: demo
  <<: *push_docker_openshift

# Release

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
build_image_release:
  stage: "build:image"
  only:
    - tags
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *build_gitlab_docker_image

build_dockerhub_image_release:
  stage: "build:image"
  only:
    - tags
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *build_dockerhub_image

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
deploy_image_release:
  stage: deploy
  only:
    - tags
  when: manual
  variables:
    DOCKER_TAG: $CI_COMMIT_TAG
  <<: *push_docker_openshift

# Integ tests

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
build_image_integtest:
  stage: "build:image"
  only:
    - schedules
  variables:
    DOCKER_TAG: nightly
  <<: *build_gitlab_docker_image

push_dockerhub_image_nightly:
  stage: "build:image"
  only:
    - schedules
  variables:
    DOCKER_TAG: nightly
  <<: *build_dockerhub_image

# TODO remove when docker hub images will be applied to deployment https://git.adorsys.de/adorsys/xs2a/aspsp-xs2a/issues/169
deploy_image_integtest:
  stage: deploy
  only:
  - schedules
  variables:
    DOCKER_TAG: nightly
  <<: *push_docker_openshift


# Branches with -helm- in naming are used for testing deployment scripts
deploy_branch_stage:
  stage: "deploy:static"
  <<: *helm_env_deploy
  when: manual
  only:
  - /^.*-helm-.*$/
  variables:
    <<: *variables
    OPENSHIFT_NAMESPACE: "${DEV_NAMESPACE}"
    DOCKER_TAG: "${CI_COMMIT_REF_SLUG}"
    HELM_RELEASE: "${CI_ENVIRONMENT_SLUG}-psd2"
    HELM_VALUE: develop.yaml
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://${CI_ENVIRONMENT_SLUG}-backend-datev-sb.cloud.adorsys.de
    on_stop: remove_deploy_review_branch

remove_deploy_review_branch:
  stage: "deploy:static"
  when: manual
  only:
  - /^.*-helm-.*$/
  image: adorsys/ci-helm:2.10
  dependencies: []
  script:
    - oc login openshift.adorsys.de --token=${HELM_TOKEN}
    - helm init --client-only
    - helm del --purge "${HELM_RELEASE}"
  variables:
    <<: *variables
    GIT_STRATEGY: none
    HELM_RELEASE: "${CI_ENVIRONMENT_SLUG}-psd2"
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
